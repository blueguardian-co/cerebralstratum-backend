---
openapi: 3.0.3
info:
  title: silent-auction-demo-backend API
  version: 1.0.0-SNAPSHOT
paths:
  /api/v1/auctions:
    get:
      tags:
      - Auctions Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Auction"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
    post:
      tags:
      - Auctions Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAuctionRequest"
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme:
        - moderator
        - auctioneer
  /api/v1/auctions/{id}:
    get:
      tags:
      - Auctions Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auction"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/v1/bids:
    get:
      tags:
      - Bids Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bids"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
    put:
      tags:
      - Bids Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bids"
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme:
        - bidder
    post:
      tags:
      - Bids Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bids"
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme:
        - bidder
  /api/v1/bids/highest:
    get:
      tags:
      - Bids Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bids"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/v1/bids/user/{id}:
    get:
      tags:
      - Bids Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bids"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme:
        - bidder
  /api/v1/bids/{id}:
    get:
      tags:
      - Bids Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bids"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/v1/users:
    get:
      tags:
      - User Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
    post:
      tags:
      - User Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /api/v1/users/{id}:
    get:
      tags:
      - User Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
      - SecurityScheme: []
  /s3:
    get:
      tags:
      - S 3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/S3FileObject"
  /s3/download/{objectKey}:
    get:
      tags:
      - S 3
      parameters:
      - name: objectKey
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /s3/upload:
    post:
      tags:
      - S 3
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/S3FormData"
      responses:
        "200":
          description: OK
components:
  schemas:
    Auction:
      type: object
      properties:
        id:
          format: int32
          type: integer
        item_name:
          type: string
        description:
          type: string
        auction_start:
          $ref: "#/components/schemas/LocalDateTime"
        auction_end:
          $ref: "#/components/schemas/LocalDateTime"
        image_path:
          type: string
    AuctionEntity:
      type: object
      properties:
        id:
          format: int32
          type: integer
        item_name:
          type: string
        description:
          type: string
        auction_start:
          $ref: "#/components/schemas/LocalDateTime"
        auction_end:
          $ref: "#/components/schemas/LocalDateTime"
        image_path:
          type: string
    Bids:
      type: object
      properties:
        id:
          format: int32
          type: integer
        auction:
          $ref: "#/components/schemas/AuctionEntity"
        user:
          $ref: "#/components/schemas/User"
        bid_time:
          $ref: "#/components/schemas/LocalDateTime"
        bid_amount:
          format: int32
          type: integer
    CreateAuctionRequest:
      type: object
      properties:
        item_name:
          type: string
        description:
          type: string
        auction_start:
          $ref: "#/components/schemas/LocalDateTime"
        auction_end:
          $ref: "#/components/schemas/LocalDateTime"
        image_path:
          type: string
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    S3FileObject:
      type: object
      properties:
        objectKey:
          type: string
        size:
          format: int64
          type: integer
    S3FormData:
      type: object
      properties:
        data:
          format: binary
          type: string
        filename:
          type: string
        mimetype:
          type: string
    User:
      type: object
      properties:
        id:
          format: int32
          type: integer
        username:
          type: string
        table_number:
          format: int32
          type: integer
  securitySchemes:
    SecurityScheme:
      type: openIdConnect
      description: Authentication
      openIdConnectUrl: https://sso.bastion.blueguardian.co/realms/silent-auction-demo/.well-known/openid-configuration
